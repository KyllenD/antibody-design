#!/bin/bash
#Specify Schrodinger path
#usage ./master receptor_name.pdb ligand_name.pdb
#input structures must be prepared so that H,L chians named on receptor and P,C sugars on ligand
x=${1%.pdb}
y=${2%.pdb}
n="$x"_"$y"
echo Jobname: $n

#script needed to set chain names fro ligand and receptor
#complex.pdb as initial receptor structure

mv $1 receptor_unprocessed.pdb

$SCHRODINGER/utilities/prepwizard -disulfides -glycosylation -samplewater -propka_pH 7.0 -rmsd 0.3 receptor_unprocessed.pdb $1 -WAIT

#identify and rename chains H,L vmd

#ligand.pdb as initial ligand structure
mv $2 ligand_unprocessed.pdb
$SCHRODINGER/utilities/prepwizard -disulfides -glycosylation -samplewater -propka_pH 7.0 -rmsd 0.3 ligand_unprocessed.pdb $2 -WAIT
#identify and rename chains C,P vmd


#Antibody docking
$SCHRODINGER/run -FROM psp piper.py -jobname $n -receptor $1 -receptor_chain A,B -poses 30 -rotations 70000 -OMPI 24 -JOBID -antibody -ligand $2 -ligand_chain C,P -use_nonstandard_residue yes -WAIT

#convert docking output to pv
$SCHRODINGER/run pv_convert.py -mode split_pv $n-out.maegz 

#run MMGBSA on pv
$SCHRODINGER/prime_mmgbsa -OVERWRITE -prime_opt OPLS_VERSION=S-OPLS $n-out-out_pv.maegz -WAIT

wget https://raw.githubusercontent.com/KyllenD/antibody-design/main/extract_complex.py
$SCHRODINGER/run extract_complex.py $n-out.maegz `sort -n -k 2 -t "," $n-out-out-out.csv | head -n 1 | awk -F "," '{print $1}' | sed "s/$n//g" | sed 's/[^0-9]*//g'` 

#ensures title is included so 6St and 3St sugars can be distinguished
sed -i "3a\TITLE $n\\" $n-out_pose_*.pdb

#set pdb title to $n 
#run gen_gmx_inps.sh script
wget https://raw.githubusercontent.com/KyllenD/antibody-design/main/gen_gmx_inp.sh
chmod +x gen_gmx_inp.sh
./gen_gmx_inp.sh
